{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class TaskCommunicationService {\n  constructor() {\n    this.tasks = []; // Array to hold tasks\n    this.tasksSubject = new BehaviorSubject(this.tasks);\n    this.tasks$ = this.tasksSubject.asObservable();\n    this.apiUrl = 'your_api_url_here';\n  }\n  getTasks() {\n    return this.tasks;\n  }\n  getTask(task) {\n    const index = this.tasks.findIndex(task => task.id === task.id);\n    return this.tasks[index];\n  }\n  addTask(task) {\n    this.tasks.push(task);\n    this.tasksSubject.next(this.tasks);\n  }\n  removeTask(index) {\n    this.tasks.splice(index, 1);\n    this.tasksSubject.next(this.tasks);\n  }\n  updateTask(updatedTask) {\n    const index = this.tasks.findIndex(task => task.id === updatedTask.id);\n    if (index !== -1) {\n      this.tasks[index] = updatedTask;\n      this.tasksSubject.next(this.tasks);\n    }\n  }\n}\n_class = TaskCommunicationService;\n_class.ɵfac = function TaskCommunicationService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","TaskCommunicationService","constructor","tasks","tasksSubject","tasks$","asObservable","apiUrl","getTasks","getTask","task","index","findIndex","id","addTask","push","next","removeTask","splice","updateTask","updatedTask","factory","ɵfac","providedIn"],"sources":["E:\\Ameena\\Project_2\\todo\\src\\app\\task-communication.service.ts"],"sourcesContent":["\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n// import { Observable } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\nimport { Task } from './models/task.model'; // Import the Task model\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskCommunicationService {\n  private tasks: Task[] = []; // Array to hold tasks\n  private tasksSubject = new BehaviorSubject<Task[]>(this.tasks);\n  tasks$ = this.tasksSubject.asObservable();\n  private apiUrl = 'your_api_url_here'; \n  constructor() {}\n  getTasks(): Task[] {\n    return this.tasks;\n  }\n  getTask(task:Task):Task{\n    const index = this.tasks.findIndex(task => task.id === task.id);\n    return  this.tasks[index];\n\n  }\n  addTask(task: Task) {\n    this.tasks.push(task);\n    this.tasksSubject.next(this.tasks);\n  }\n  removeTask(index: number) {\n    this.tasks.splice(index, 1);\n    this.tasksSubject.next(this.tasks);\n  }\n  updateTask(updatedTask: Task) {\n    const index = this.tasks.findIndex(task => task.id === updatedTask.id);\n    if (index !== -1) {\n      this.tasks[index] = updatedTask;\n      this.tasksSubject.next(this.tasks);\n    }\n  }\n}\n"],"mappings":";AAGA,SAASA,eAAe,QAAQ,MAAM;;AAOtC,OAAM,MAAOC,wBAAwB;EAKnCC,YAAA;IAJQ,KAAAC,KAAK,GAAW,EAAE,CAAC,CAAC;IACpB,KAAAC,YAAY,GAAG,IAAIJ,eAAe,CAAS,IAAI,CAACG,KAAK,CAAC;IAC9D,KAAAE,MAAM,GAAG,IAAI,CAACD,YAAY,CAACE,YAAY,EAAE;IACjC,KAAAC,MAAM,GAAG,mBAAmB;EACrB;EACfC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACL,KAAK;EACnB;EACAM,OAAOA,CAACC,IAAS;IACf,MAAMC,KAAK,GAAG,IAAI,CAACR,KAAK,CAACS,SAAS,CAACF,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC;IAC/D,OAAQ,IAAI,CAACV,KAAK,CAACQ,KAAK,CAAC;EAE3B;EACAG,OAAOA,CAACJ,IAAU;IAChB,IAAI,CAACP,KAAK,CAACY,IAAI,CAACL,IAAI,CAAC;IACrB,IAAI,CAACN,YAAY,CAACY,IAAI,CAAC,IAAI,CAACb,KAAK,CAAC;EACpC;EACAc,UAAUA,CAACN,KAAa;IACtB,IAAI,CAACR,KAAK,CAACe,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;IAC3B,IAAI,CAACP,YAAY,CAACY,IAAI,CAAC,IAAI,CAACb,KAAK,CAAC;EACpC;EACAgB,UAAUA,CAACC,WAAiB;IAC1B,MAAMT,KAAK,GAAG,IAAI,CAACR,KAAK,CAACS,SAAS,CAACF,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKO,WAAW,CAACP,EAAE,CAAC;IACtE,IAAIF,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACR,KAAK,CAACQ,KAAK,CAAC,GAAGS,WAAW;MAC/B,IAAI,CAAChB,YAAY,CAACY,IAAI,CAAC,IAAI,CAACb,KAAK,CAAC;;EAEtC;;SA5BWF,wBAAwB;;mBAAxBA,MAAwB;AAAA;;SAAxBA,MAAwB;EAAAoB,OAAA,EAAxBpB,MAAwB,CAAAqB,IAAA;EAAAC,UAAA,EAFvB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}