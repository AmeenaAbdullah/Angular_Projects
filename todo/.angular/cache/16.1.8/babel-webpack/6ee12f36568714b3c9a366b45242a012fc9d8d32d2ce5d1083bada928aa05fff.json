{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../task-communication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../todoitem/todoitem.component\";\nfunction TodoComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"app-todoitem\", 3);\n    i0.ɵɵlistener(\"remove\", function TodoComponent_li_6_Template_app_todoitem_remove_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeTask(i_r2));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"task\", task_r1);\n  }\n}\nexport class TodoComponent {\n  constructor(taskService, router) {\n    this.taskService = taskService;\n    this.router = router;\n    this.tasks = [];\n  }\n  ngOnInit() {\n    this.taskService.tasks$.subscribe(tasks => {\n      this.tasks = tasks;\n    });\n  }\n  addTask(newTask) {\n    this.taskService.addTask(newTask);\n  }\n  removeTask(index) {\n    this.taskService.removeTask(index);\n  }\n  clickButton(path) {\n    console.log(\"move\");\n    this.router.navigate([path]);\n  }\n}\n_class = TodoComponent;\n_class.ɵfac = function TodoComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskCommunicationService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-todo\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[1, \"todo-container\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"task\", \"remove\"]],\n  template: function TodoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Todo List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function TodoComponent_Template_button_click_3_listener() {\n        return ctx.clickButton(\"/task-form\");\n      });\n      i0.ɵɵtext(4, \"Add \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ul\");\n      i0.ɵɵtemplate(6, TodoComponent_li_6_Template, 2, 1, \"li\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.TodoitemComponent],\n  styles: [\".todo-container[_ngcontent-%COMP%] {\\n  max-width: 430px;\\n  margin: 0 auto;\\n  border-radius: 5px;\\n  height: 489px;\\n  margin-top: 131px;\\n  overflow: auto;\\n  box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.5);\\n}  \\n.todo-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{\\n width: 80%;\\n background-color: #7c7c99;\\n\\n color: white;\\n border-radius: 20px;\\n margin-left: 46px;\\n margin-right: 20px;\\n height: 40px;\\n margin-bottom: 10px;\\n}\\n.todo-container[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{\\n    text-align: center;\\n    background-color: #2e2e5f;\\n    color: white;\\n    padding-top: 10px;\\n    padding-bottom: 10px;\\n}\\n.todo-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\n    width: 90%;\\n    height: 40px;\\n    margin-left: 10px;   \\n}\\n.custom-plusicon[_ngcontent-%COMP%]{\\n  margin-left: 10px;\\n}\\nul[_ngcontent-%COMP%] {\\n    list-style-type: none;\\n    padding: 0;\\n}\\n  \\ninput[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\n    margin-right: 10px;\\n    \\n}\\n.completed[_ngcontent-%COMP%] {\\n    text-decoration: line-through;\\n}\\n  \\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50cy90b2RvL3RvZG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixpQkFBaUI7RUFDakIsY0FBYztFQUNkLCtDQUErQztBQUNqRDtBQUNBO0NBQ0MsVUFBVTtDQUNWLHlCQUF5Qjs7Q0FFekIsWUFBWTtDQUNaLG1CQUFtQjtDQUNuQixpQkFBaUI7Q0FDakIsa0JBQWtCO0NBQ2xCLFlBQVk7Q0FDWixtQkFBbUI7QUFDcEI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixvQkFBb0I7QUFDeEI7QUFDQTtJQUNJLFVBQVU7SUFDVixZQUFZO0lBQ1osaUJBQWlCO0FBQ3JCO0FBQ0E7RUFDRSxpQkFBaUI7QUFDbkI7QUFDQTtJQUNJLHFCQUFxQjtJQUNyQixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxrQkFBa0I7O0FBRXRCO0FBQ0E7SUFDSSw2QkFBNkI7QUFDakMiLCJzb3VyY2VzQ29udGVudCI6WyIudG9kby1jb250YWluZXIge1xyXG4gIG1heC13aWR0aDogNDMwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGhlaWdodDogNDg5cHg7XHJcbiAgbWFyZ2luLXRvcDogMTMxcHg7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgYm94LXNoYWRvdzogMHB4IDVweCAxMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbn0gIFxyXG4udG9kby1jb250YWluZXIgYnV0dG9ue1xyXG4gd2lkdGg6IDgwJTtcclxuIGJhY2tncm91bmQtY29sb3I6ICM3YzdjOTk7XHJcblxyXG4gY29sb3I6IHdoaXRlO1xyXG4gYm9yZGVyLXJhZGl1czogMjBweDtcclxuIG1hcmdpbi1sZWZ0OiA0NnB4O1xyXG4gbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG4gaGVpZ2h0OiA0MHB4O1xyXG4gbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG4udG9kby1jb250YWluZXIgaDF7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmUyZTVmO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxufVxyXG4udG9kby1jb250YWluZXIgaW5wdXR7XHJcbiAgICB3aWR0aDogOTAlO1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7ICAgXHJcbn1cclxuLmN1c3RvbS1wbHVzaWNvbntcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG51bCB7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcbiAgXHJcbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICBcclxufVxyXG4uY29tcGxldGVkIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xyXG59XHJcbiAgXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","TodoComponent_li_6_Template_app_todoitem_remove_1_listener","restoredCtx","ɵɵrestoreView","_r4","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","removeTask","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","task_r1","TodoComponent","constructor","taskService","router","tasks","ngOnInit","tasks$","subscribe","addTask","newTask","clickButton","path","console","log","navigate","ɵɵdirectiveInject","i1","TaskCommunicationService","i2","Router","selectors","decls","vars","consts","template","TodoComponent_Template","rf","ctx","ɵɵtext","TodoComponent_Template_button_click_3_listener","ɵɵtemplate","TodoComponent_li_6_Template"],"sources":["E:\\Ameena\\Project_2\\todo\\src\\app\\Components\\todo\\todo.component.ts","E:\\Ameena\\Project_2\\todo\\src\\app\\Components\\todo\\todo.component.html"],"sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { Task } from '../../models/task.model';\nimport { Router } from '@angular/router';\nimport { TaskCommunicationService } from '../../task-communication.service'; // Import the TaskCommunicationService\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent {\n  tasks: Task[] = [];\n\n  constructor(private taskService: TaskCommunicationService,private router: Router) {}\n\n  ngOnInit() {\n    this.taskService.tasks$.subscribe(tasks => {\n      this.tasks = tasks;\n    });\n  }\n\n  addTask(newTask: Task) {\n    this.taskService.addTask(newTask);\n  }\n\n  removeTask(index: number) {\n    this.taskService.removeTask(index);\n  }\n\n\n  clickButton(path: string) {\n    console.log(\"move\")\n    this.router.navigate([path]);\n} \n}\n\n","<div class=\"todo-container\">\n  <h1>Todo List</h1>\n  <button (click)=\"clickButton('/task-form')\">Add </button>\n  <!-- <input [(ngModel)]=\"newTask\" placeholder=\"Add a new task\" (keyup.enter)=\"addTask()\" > -->\n  <!-- <span><a  routerLink=\"/form\"><i class=\"fas fa-plus custom-plusicon\"></i></a></span> -->\n\n  <ul>\n    <li *ngFor=\"let task of tasks; let i = index\">\n      <app-todoitem [task]=\"task\" (remove)=\"removeTask(i)\" > </app-todoitem>\n    </li>\n  </ul>\n</div>\n"],"mappings":";;;;;;;;;ICOIA,EAAA,CAAAC,cAAA,SAA8C;IAChBD,EAAA,CAAAE,UAAA,oBAAAC,2DAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,IAAA,GAAAH,WAAA,CAAAI,KAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAAUV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,UAAA,CAAAL,IAAA,CAAa;IAAA,EAAC;IAAGP,EAAA,CAAAa,YAAA,EAAe;;;;IAAxDb,EAAA,CAAAc,SAAA,GAAa;IAAbd,EAAA,CAAAe,UAAA,SAAAC,OAAA,CAAa;;;ADGjC,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,WAAqC,EAASC,MAAc;IAA5D,KAAAD,WAAW,GAAXA,WAAW;IAAmC,KAAAC,MAAM,GAANA,MAAM;IAFxE,KAAAC,KAAK,GAAW,EAAE;EAEiE;EAEnFC,QAAQA,CAAA;IACN,IAAI,CAACH,WAAW,CAACI,MAAM,CAACC,SAAS,CAACH,KAAK,IAAG;MACxC,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAI,OAAOA,CAACC,OAAa;IACnB,IAAI,CAACP,WAAW,CAACM,OAAO,CAACC,OAAO,CAAC;EACnC;EAEAd,UAAUA,CAACJ,KAAa;IACtB,IAAI,CAACW,WAAW,CAACP,UAAU,CAACJ,KAAK,CAAC;EACpC;EAGAmB,WAAWA,CAACC,IAAY;IACtBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAACH,IAAI,CAAC,CAAC;EAChC;;SAvBaX,aAAa;;mBAAbA,MAAa,EAAAjB,EAAA,CAAAgC,iBAAA,CAAAC,EAAA,CAAAC,wBAAA,GAAAlC,EAAA,CAAAgC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;QAAbnB,MAAa;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX1B3C,EAAA,CAAAC,cAAA,aAA4B;MACtBD,EAAA,CAAA6C,MAAA,gBAAS;MAAA7C,EAAA,CAAAa,YAAA,EAAK;MAClBb,EAAA,CAAAC,cAAA,gBAA4C;MAApCD,EAAA,CAAAE,UAAA,mBAAA4C,+CAAA;QAAA,OAASF,GAAA,CAAAjB,WAAA,CAAY,YAAY,CAAC;MAAA,EAAC;MAAC3B,EAAA,CAAA6C,MAAA,WAAI;MAAA7C,EAAA,CAAAa,YAAA,EAAS;MAIzDb,EAAA,CAAAC,cAAA,SAAI;MACFD,EAAA,CAAA+C,UAAA,IAAAC,2BAAA,gBAEK;MACPhD,EAAA,CAAAa,YAAA,EAAK;;;MAHkBb,EAAA,CAAAc,SAAA,GAAU;MAAVd,EAAA,CAAAe,UAAA,YAAA6B,GAAA,CAAAvB,KAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}