{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../task-communication.service\";\nimport * as i2 from \"@angular/router\";\nexport class UpdatetaskComponent {\n  constructor(taskCommunicationService, router) {\n    this.taskCommunicationService = taskCommunicationService;\n    this.router = router;\n    this.newTask = {\n      id: 0,\n      title: '',\n      description: '',\n      dueDate: new Date(),\n      completed: false\n    }; // Initialize a new Task instance\n    this.id = 0;\n  } // Inject the service\n  onSubmit(form) {\n    if (form.valid) {\n      // Call the addTask method of the service\n      this.router.navigate(['/']);\n      this.taskCommunicationService.updateTask(this.newTask, this.id);\n      // Clear the form after submission\n      this.newTask = {\n        id: 0,\n        title: '',\n        description: '',\n        dueDate: new Date(),\n        completed: false\n      }; // Initialize a new Task instance\n      form.resetForm();\n    }\n  }\n}\n_class = UpdatetaskComponent;\n_class.ɵfac = function UpdatetaskComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskCommunicationService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-updatetask\"]],\n  decls: 2,\n  vars: 0,\n  template: function UpdatetaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"updatetask works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["UpdatetaskComponent","constructor","taskCommunicationService","router","newTask","id","title","description","dueDate","Date","completed","onSubmit","form","valid","navigate","updateTask","resetForm","i0","ɵɵdirectiveInject","i1","TaskCommunicationService","i2","Router","selectors","decls","vars","template","UpdatetaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["E:\\Ameena\\Project_2\\todo\\src\\app\\Components\\update-task\\updatetask.component.ts","E:\\Ameena\\Project_2\\todo\\src\\app\\Components\\update-task\\updatetask.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Task } from '../../models/task.model'; // Import the Task model\nimport { Router} from '@angular/router';\nimport { TaskCommunicationService } from '../../task-communication.service'; // Import the TaskCommunicationService\n\n@Component({\n  selector: 'app-updatetask',\n  templateUrl: './updatetask.component.html',\n  styleUrls: ['./updatetask.component.css']\n})\nexport class UpdatetaskComponent {\n  newTask: Task = { id: 0, title: '', description: '', dueDate: new Date(), completed: false };// Initialize a new Task instance\n  id: number=0;\n  constructor(private taskCommunicationService: TaskCommunicationService, private router: Router) {} // Inject the service\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      // Call the addTask method of the service\n      this.router.navigate(['/']);\n      \n      this.taskCommunicationService.updateTask(this.newTask,this.id);\n\n      // Clear the form after submission\n      this.newTask ={ id: 0, title: '', description: '', dueDate: new Date(), completed: false };// Initialize a new Task instance\n     \n      form.resetForm();\n    }\n  }\n}\n","<p>updatetask works!</p>\n"],"mappings":";;;;AAWA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAoBC,wBAAkD,EAAUC,MAAc;IAA1E,KAAAD,wBAAwB,GAAxBA,wBAAwB;IAAoC,KAAAC,MAAM,GAANA,MAAM;IAFtF,KAAAC,OAAO,GAAS;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,OAAO,EAAE,IAAIC,IAAI,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAE,CAAC;IAC7F,KAAAL,EAAE,GAAS,CAAC;EACqF,CAAC,CAAC;EAEnGM,QAAQA,CAACC,IAAY;IACnB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd;MACA,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAE3B,IAAI,CAACZ,wBAAwB,CAACa,UAAU,CAAC,IAAI,CAACX,OAAO,EAAC,IAAI,CAACC,EAAE,CAAC;MAE9D;MACA,IAAI,CAACD,OAAO,GAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,OAAO,EAAE,IAAIC,IAAI,EAAE;QAAEC,SAAS,EAAE;MAAK,CAAE,CAAC;MAE3FE,IAAI,CAACI,SAAS,EAAE;;EAEpB;;SAjBWhB,mBAAmB;;mBAAnBA,MAAmB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,wBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;QAAnBtB,MAAmB;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXhCX,EAAA,CAAAa,cAAA,QAAG;MAAAb,EAAA,CAAAc,MAAA,wBAAiB;MAAAd,EAAA,CAAAe,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}