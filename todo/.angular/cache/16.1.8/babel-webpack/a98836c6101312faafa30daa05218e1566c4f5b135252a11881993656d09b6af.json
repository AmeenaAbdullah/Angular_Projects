{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/task-communication.service\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdatetaskComponent {\n  constructor(route, taskCommunicationService, router) {\n    this.route = route;\n    this.taskCommunicationService = taskCommunicationService;\n    this.router = router;\n    this.newTask = {\n      id: '',\n      title: '',\n      description: '',\n      dueDate: new Date(),\n      completed: false\n    }; // Initialize a new Task instance\n  } // Inject the service\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const taskId = params['id']; // This is the task ID from the route parameter\n      this.newTask = this.taskCommunicationService.getTask(taskId);\n    });\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      // Call the updateTask method of the service\n      this.taskCommunicationService.updateTask(this.newTask);\n      this.router.navigate(['/']);\n      // Clear the form after submission\n      this.newTask = {\n        id: '',\n        title: '',\n        description: '',\n        dueDate: new Date(),\n        completed: false\n      };\n      form.resetForm();\n    }\n  }\n}\n_class = UpdatetaskComponent;\n_class.ɵfac = function UpdatetaskComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.TaskCommunicationService), i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-updatetask\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[1, \"form-container\"], [3, \"ngSubmit\"], [\"taskForm\", \"ngForm\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function UpdatetaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Update Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdatetaskComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdatetaskComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.newTask.title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"textarea\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdatetaskComponent_Template_textarea_ngModelChange_10_listener($event) {\n        return ctx.newTask.description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 7);\n      i0.ɵɵtext(12, \"Update Task\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.title);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.description);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n\\n.form-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n    height: 100vh;\\n}\\n\\n\\n\\n.form-container[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n    font-size: 24px;\\n    color: #2e2e5f;\\n    font-weight: bolder;\\n    margin-bottom: 20px;\\n}\\n\\n\\n\\n.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n    background-color: white;\\n    padding: 20px;\\n    border-radius: 8px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    width: 300px;\\n}\\n\\n\\n\\n.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 8px;\\n    font-weight: bold;\\n}\\n\\n\\n\\n.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[type=\\\"text\\\"][_ngcontent-%COMP%], .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    margin-bottom: 16px;\\n}\\n\\n\\n\\n.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    background-color: #2e2e5f;\\n    color: white;\\n    border: none;\\n    padding: 10px 20px;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    transition: background-color 0.3s ease;\\n}\\n\\n\\n\\n.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n    background-color: #0f87e6;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50cy91cGRhdGUtdGFzay91cGRhdGV0YXNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaURBQWlEO0FBQ2pEO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGFBQWE7QUFDakI7O0FBRUEscURBQXFEO0FBQ3JEO0lBQ0ksZUFBZTtJQUNmLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsbUJBQW1CO0FBQ3ZCOztBQUVBLCtCQUErQjtBQUMvQjtJQUNJLHVCQUF1QjtJQUN2QixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHdDQUF3QztJQUN4QyxZQUFZO0FBQ2hCOztBQUVBLHNDQUFzQztBQUN0QztJQUNJLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCOztBQUVBLDBEQUEwRDtBQUMxRDs7SUFFSSxXQUFXO0lBQ1gsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBLGlEQUFpRDtBQUNqRDtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLHNDQUFzQztBQUMxQzs7QUFFQSwwQ0FBMEM7QUFDMUM7SUFDSSx5QkFBeUI7QUFDN0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBTdHlsZXMgZm9yIHRoZSBjb250YWluZXIgdGhhdCBob2xkcyB0aGUgZm9ybSAqL1xyXG4uZm9ybS1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG59XHJcblxyXG4vKiBTdHlsZXMgZm9yIHRoZSBoZWFkaW5nIHdpdGhpbiB0aGUgZm9ybSBjb250YWluZXIgKi9cclxuLmZvcm0tY29udGFpbmVyIGgxIHtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIGNvbG9yOiAjMmUyZTVmO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi8qIFN0eWxlcyBmb3IgdGhlIGZvcm0gaXRzZWxmICovXHJcbi5mb3JtLWNvbnRhaW5lciBmb3JtIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbn1cclxuXHJcbi8qIFN0eWxlcyBmb3IgbGFiZWxzIHdpdGhpbiB0aGUgZm9ybSAqL1xyXG4uZm9ybS1jb250YWluZXIgZm9ybSBsYWJlbCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi1ib3R0b206IDhweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4vKiBTdHlsZXMgZm9yIHRleHQgaW5wdXRzIGFuZCB0ZXh0IGFyZWFzIHdpdGhpbiB0aGUgZm9ybSAqL1xyXG4uZm9ybS1jb250YWluZXIgZm9ybSBpbnB1dFt0eXBlPVwidGV4dFwiXSxcclxuLmZvcm0tY29udGFpbmVyIGZvcm0gdGV4dGFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbn1cclxuXHJcbi8qIFN0eWxlcyBmb3IgdGhlIHN1Ym1pdCBidXR0b24gd2l0aGluIHRoZSBmb3JtICovXHJcbi5mb3JtLWNvbnRhaW5lciBmb3JtIGJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmUyZTVmO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XHJcbn1cclxuXHJcbi8qIFN0eWxlcyBmb3IgdGhlIHN1Ym1pdCBidXR0b24gb24gaG92ZXIgKi9cclxuLmZvcm0tY29udGFpbmVyIGZvcm0gYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwZjg3ZTY7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["UpdatetaskComponent","constructor","route","taskCommunicationService","router","newTask","id","title","description","dueDate","Date","completed","ngOnInit","params","subscribe","taskId","getTask","onSubmit","form","valid","updateTask","navigate","resetForm","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","TaskCommunicationService","Router","selectors","decls","vars","consts","template","UpdatetaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UpdatetaskComponent_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","UpdatetaskComponent_Template_input_ngModelChange_7_listener","$event","UpdatetaskComponent_Template_textarea_ngModelChange_10_listener","ɵɵadvance","ɵɵproperty"],"sources":["E:\\Ameena\\Project_2\\todo\\src\\app\\Components\\update-task\\updatetask.component.ts","E:\\Ameena\\Project_2\\todo\\src\\app\\Components\\update-task\\updatetask.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Task } from '../../models/task.model'; // Import the Task model\nimport { Router} from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { TaskCommunicationService } from '../../services/task-communication.service'; // Import the TaskCommunicationService\n\n@Component({\n  selector: 'app-updatetask',\n  templateUrl: './updatetask.component.html',\n  styleUrls: ['./updatetask.component.css']\n})\nexport class UpdatetaskComponent {\n  \n  newTask: Task = { id: '', title: '', description: '', dueDate: new Date(), completed: false };// Initialize a new Task instance\n \n  constructor(private route: ActivatedRoute,private taskCommunicationService: TaskCommunicationService, private router: Router) {} // Inject the service\n  \n \n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const taskId = params['id']; // This is the task ID from the route parameter\n      this.newTask= this.taskCommunicationService.getTask(taskId);\n    });\n  \n  }\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      // Call the updateTask method of the service\n      this.taskCommunicationService.updateTask(this.newTask);\n      this.router.navigate(['/']);\n    \n      // Clear the form after submission\n      this.newTask ={ id: '', title: '', description: '', dueDate: new Date(), completed: false };\n      form.resetForm();\n    }\n  }\n}\n","<!-- Container for the form section -->\n<div class=\"form-container\">\n  <h1>Update Task</h1> \n  <!-- Update task form -->\n  <form (ngSubmit)=\"onSubmit(taskForm)\" #taskForm=\"ngForm\">\n    \n    <!-- Label and input for updating the task title -->\n    <label for=\"title\">Title</label>\n    <input type=\"text\" id=\"title\" [(ngModel)]=\"newTask.title\" name=\"title\">\n    \n    <!-- Label and textarea for updating the task description -->\n    <label for=\"description\">Description</label>\n    <textarea id=\"description\" [(ngModel)]=\"newTask.description\" name=\"description\"></textarea>\n    \n    <!-- Button to submit the updated task information -->\n    <button type=\"submit\">Update Task</button>\n  \n  </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}