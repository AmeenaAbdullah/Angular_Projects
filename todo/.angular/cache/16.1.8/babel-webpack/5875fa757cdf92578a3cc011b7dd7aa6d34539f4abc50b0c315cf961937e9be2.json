{"ast":null,"code":"var _class;\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class TaskCommunicationService {\n  constructor() {\n    this.taskAddedSource = new Subject();\n    this.taskAdded$ = this.taskAddedSource.asObservable();\n  }\n  addTask(task) {\n    this.taskAddedSource.next(task);\n  }\n}\n_class = TaskCommunicationService;\n_class.ɵfac = function TaskCommunicationService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Subject","TaskCommunicationService","constructor","taskAddedSource","taskAdded$","asObservable","addTask","task","next","factory","ɵfac","providedIn"],"sources":["E:\\Ameena\\Project_2\\todo\\src\\app\\task-communication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Task } from './models/task.model'; // Import the Task model\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskCommunicationService {\n  private taskAddedSource = new Subject<Task>();\n  taskAdded$ = this.taskAddedSource.asObservable();\n\n  addTask(task: Task) {\n    this.taskAddedSource.next(task);\n  }\n}\n"],"mappings":";AACA,SAASA,OAAO,QAAQ,MAAM;;AAM9B,OAAM,MAAOC,wBAAwB;EAHrCC,YAAA;IAIU,KAAAC,eAAe,GAAG,IAAIH,OAAO,EAAQ;IAC7C,KAAAI,UAAU,GAAG,IAAI,CAACD,eAAe,CAACE,YAAY,EAAE;;EAEhDC,OAAOA,CAACC,IAAU;IAChB,IAAI,CAACJ,eAAe,CAACK,IAAI,CAACD,IAAI,CAAC;EACjC;;SANWN,wBAAwB;;mBAAxBA,MAAwB;AAAA;;SAAxBA,MAAwB;EAAAQ,OAAA,EAAxBR,MAAwB,CAAAS,IAAA;EAAAC,UAAA,EAFvB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}