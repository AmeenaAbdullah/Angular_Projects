{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../task-communication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdatetaskComponent {\n  constructor(taskCommunicationService, router) {\n    this.taskCommunicationService = taskCommunicationService;\n    this.router = router;\n    this.newTask = {\n      id: 0,\n      title: '',\n      description: '',\n      dueDate: new Date(),\n      completed: false\n    }; // Initialize a new Task instance\n    this.id = 0;\n  } // Inject the service\n  onSubmit(form) {\n    if (form.valid) {\n      // Call the addTask method of the service\n      this.router.navigate(['/']);\n      this.taskCommunicationService.updateTask(this.newTask, this.id);\n      // Clear the form after submission\n      this.newTask = {\n        id: 0,\n        title: '',\n        description: '',\n        dueDate: new Date(),\n        completed: false\n      }; // Initialize a new Task instance\n      form.resetForm();\n    }\n  }\n}\n_class = UpdatetaskComponent;\n_class.ɵfac = function UpdatetaskComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskCommunicationService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-updatetask\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[1, \"form-container\"], [3, \"ngSubmit\"], [\"taskForm\", \"ngForm\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function UpdatetaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"update Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdatetaskComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdatetaskComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.newTask.title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"textarea\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdatetaskComponent_Template_textarea_ngModelChange_10_listener($event) {\n        return ctx.newTask.description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 7);\n      i0.ɵɵtext(12, \"update Task\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.title);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.description);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["UpdatetaskComponent","constructor","taskCommunicationService","router","newTask","id","title","description","dueDate","Date","completed","onSubmit","form","valid","navigate","updateTask","resetForm","i0","ɵɵdirectiveInject","i1","TaskCommunicationService","i2","Router","selectors","decls","vars","consts","template","UpdatetaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UpdatetaskComponent_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","UpdatetaskComponent_Template_input_ngModelChange_7_listener","$event","UpdatetaskComponent_Template_textarea_ngModelChange_10_listener","ɵɵadvance","ɵɵproperty"],"sources":["E:\\Ameena\\Project_2\\todo\\src\\app\\Components\\update-task\\updatetask.component.ts","E:\\Ameena\\Project_2\\todo\\src\\app\\Components\\update-task\\updatetask.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Task } from '../../models/task.model'; // Import the Task model\nimport { Router} from '@angular/router';\nimport { TaskCommunicationService } from '../../task-communication.service'; // Import the TaskCommunicationService\n\n@Component({\n  selector: 'app-updatetask',\n  templateUrl: './updatetask.component.html',\n  styleUrls: ['./updatetask.component.css']\n})\nexport class UpdatetaskComponent {\n  newTask: Task = { id: 0, title: '', description: '', dueDate: new Date(), completed: false };// Initialize a new Task instance\n  id: number=0;\n  constructor(private taskCommunicationService: TaskCommunicationService, private router: Router) {} // Inject the service\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      // Call the addTask method of the service\n      this.router.navigate(['/']);\n      \n      this.taskCommunicationService.updateTask(this.newTask,this.id);\n\n      // Clear the form after submission\n      this.newTask ={ id: 0, title: '', description: '', dueDate: new Date(), completed: false };// Initialize a new Task instance\n     \n      form.resetForm();\n    }\n  }\n}\n","<!-- In add-task.component.html -->\n<div class=\"form-container\">\n    <h1>update Task</h1>\n    <form (ngSubmit)=\"onSubmit(taskForm)\" #taskForm=\"ngForm\">\n        \n      <label for=\"title\">Title</label>\n      <input type=\"text\" id=\"title\" [(ngModel)]=\"newTask.title\" name=\"title\">\n    \n      <label for=\"description\">Description</label>\n      <textarea id=\"description\" [(ngModel)]=\"newTask.description\" name=\"description\"></textarea>\n    \n      <!-- Add more form controls as needed -->\n    \n      <button type=\"submit\">update Task</button>\n    </form>\n  </div>\n  "],"mappings":";;;;;AAWA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAoBC,wBAAkD,EAAUC,MAAc;IAA1E,KAAAD,wBAAwB,GAAxBA,wBAAwB;IAAoC,KAAAC,MAAM,GAANA,MAAM;IAFtF,KAAAC,OAAO,GAAS;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,OAAO,EAAE,IAAIC,IAAI,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAE,CAAC;IAC7F,KAAAL,EAAE,GAAS,CAAC;EACqF,CAAC,CAAC;EAEnGM,QAAQA,CAACC,IAAY;IACnB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd;MACA,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAE3B,IAAI,CAACZ,wBAAwB,CAACa,UAAU,CAAC,IAAI,CAACX,OAAO,EAAC,IAAI,CAACC,EAAE,CAAC;MAE9D;MACA,IAAI,CAACD,OAAO,GAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,OAAO,EAAE,IAAIC,IAAI,EAAE;QAAEC,SAAS,EAAE;MAAK,CAAE,CAAC;MAE3FE,IAAI,CAACI,SAAS,EAAE;;EAEpB;;SAjBWhB,mBAAmB;;mBAAnBA,MAAmB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,wBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;QAAnBtB,MAAmB;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCVhCZ,EAAA,CAAAc,cAAA,aAA4B;MACpBd,EAAA,CAAAe,MAAA,kBAAW;MAAAf,EAAA,CAAAgB,YAAA,EAAK;MACpBhB,EAAA,CAAAc,cAAA,iBAAyD;MAAnDd,EAAA,CAAAiB,UAAA,sBAAAC,sDAAA;QAAAlB,EAAA,CAAAmB,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAArB,EAAA,CAAAsB,WAAA;QAAA,OAAYtB,EAAA,CAAAuB,WAAA,CAAAV,GAAA,CAAAnB,QAAA,CAAA2B,GAAA,CAAkB;MAAA,EAAC;MAEnCrB,EAAA,CAAAc,cAAA,eAAmB;MAAAd,EAAA,CAAAe,MAAA,YAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAChChB,EAAA,CAAAc,cAAA,eAAuE;MAAzCd,EAAA,CAAAiB,UAAA,2BAAAO,4DAAAC,MAAA;QAAA,OAAAZ,GAAA,CAAA1B,OAAA,CAAAE,KAAA,GAAAoC,MAAA;MAAA,EAA2B;MAAzDzB,EAAA,CAAAgB,YAAA,EAAuE;MAEvEhB,EAAA,CAAAc,cAAA,eAAyB;MAAAd,EAAA,CAAAe,MAAA,kBAAW;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAC5ChB,EAAA,CAAAc,cAAA,mBAAgF;MAArDd,EAAA,CAAAiB,UAAA,2BAAAS,gEAAAD,MAAA;QAAA,OAAAZ,GAAA,CAAA1B,OAAA,CAAAG,WAAA,GAAAmC,MAAA;MAAA,EAAiC;MAAoBzB,EAAA,CAAAgB,YAAA,EAAW;MAI3FhB,EAAA,CAAAc,cAAA,iBAAsB;MAAAd,EAAA,CAAAe,MAAA,mBAAW;MAAAf,EAAA,CAAAgB,YAAA,EAAS;;;MAPZhB,EAAA,CAAA2B,SAAA,GAA2B;MAA3B3B,EAAA,CAAA4B,UAAA,YAAAf,GAAA,CAAA1B,OAAA,CAAAE,KAAA,CAA2B;MAG9BW,EAAA,CAAA2B,SAAA,GAAiC;MAAjC3B,EAAA,CAAA4B,UAAA,YAAAf,GAAA,CAAA1B,OAAA,CAAAG,WAAA,CAAiC"},"metadata":{},"sourceType":"module","externalDependencies":[]}