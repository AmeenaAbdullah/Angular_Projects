{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class TaskCommunicationService {\n  constructor() {\n    this.tasks = [];\n    // Create a BehaviorSubject to observe changes in tasks\n    this.tasksSubject = new BehaviorSubject(this.tasks);\n    // Observable to subscribe to changes in tasks\n    this.tasks$ = this.tasksSubject.asObservable();\n  }\n  // Get the array of tasks\n  getTasks() {\n    return this.tasks;\n  }\n  // Get a specific task by ID\n  getTask(task) {\n    const index = this.tasks.findIndex(t => t.id === task.id);\n    return this.tasks[index];\n  }\n  // Add a new task to the tasks array\n  addTask(task) {\n    this.tasks.push(task);\n    this.tasksSubject.next(this.tasks); // Notify subscribers about the change\n  }\n  // Remove a task from the tasks array by index\n  removeTask(index) {\n    this.tasks.splice(index, 1);\n    this.tasksSubject.next(this.tasks); // Notify subscribers about the change\n  }\n  // Update an existing task in the tasks array\n  updateTask(updatedTask) {\n    const index = this.tasks.findIndex(t => t.id === updatedTask.id);\n    if (index !== -1) {\n      this.tasks[index] = updatedTask;\n      this.tasksSubject.next(this.tasks); // Notify subscribers about the change\n    }\n  }\n}\n_class = TaskCommunicationService;\n_class.ɵfac = function TaskCommunicationService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","TaskCommunicationService","constructor","tasks","tasksSubject","tasks$","asObservable","getTasks","getTask","task","index","findIndex","t","id","addTask","push","next","removeTask","splice","updateTask","updatedTask","factory","ɵfac","providedIn"],"sources":["E:\\Ameena\\Project_2\\todo\\src\\app\\task-communication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Task } from './models/task.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskCommunicationService {\n  private tasks: Task[] = []; \n\n  // Create a BehaviorSubject to observe changes in tasks\n  private tasksSubject = new BehaviorSubject<Task[]>(this.tasks);\n\n  // Observable to subscribe to changes in tasks\n  tasks$ = this.tasksSubject.asObservable();\n\n  constructor() {}\n\n  // Get the array of tasks\n  getTasks(): Task[] {\n    return this.tasks;\n  }\n\n  // Get a specific task by ID\n  getTask(task: Task): Task {\n    const index = this.tasks.findIndex(t => t.id === task.id);\n    return this.tasks[index];\n  }\n\n  // Add a new task to the tasks array\n  addTask(task: Task) {\n    this.tasks.push(task);\n    this.tasksSubject.next(this.tasks); // Notify subscribers about the change\n  }\n\n  // Remove a task from the tasks array by index\n  removeTask(index: number) {\n    this.tasks.splice(index, 1);\n    this.tasksSubject.next(this.tasks); // Notify subscribers about the change\n  }\n\n  // Update an existing task in the tasks array\n  updateTask(updatedTask: Task) {\n    const index = this.tasks.findIndex(t => t.id === updatedTask.id);\n    if (index !== -1) {\n      this.tasks[index] = updatedTask;\n      this.tasksSubject.next(this.tasks); // Notify subscribers about the change\n    }\n  }\n}\n"],"mappings":";AACA,SAASA,eAAe,QAAQ,MAAM;;AAMtC,OAAM,MAAOC,wBAAwB;EASnCC,YAAA;IARQ,KAAAC,KAAK,GAAW,EAAE;IAE1B;IACQ,KAAAC,YAAY,GAAG,IAAIJ,eAAe,CAAS,IAAI,CAACG,KAAK,CAAC;IAE9D;IACA,KAAAE,MAAM,GAAG,IAAI,CAACD,YAAY,CAACE,YAAY,EAAE;EAE1B;EAEf;EACAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACJ,KAAK;EACnB;EAEA;EACAK,OAAOA,CAACC,IAAU;IAChB,MAAMC,KAAK,GAAG,IAAI,CAACP,KAAK,CAACQ,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,CAAC;IACzD,OAAO,IAAI,CAACV,KAAK,CAACO,KAAK,CAAC;EAC1B;EAEA;EACAI,OAAOA,CAACL,IAAU;IAChB,IAAI,CAACN,KAAK,CAACY,IAAI,CAACN,IAAI,CAAC;IACrB,IAAI,CAACL,YAAY,CAACY,IAAI,CAAC,IAAI,CAACb,KAAK,CAAC,CAAC,CAAC;EACtC;EAEA;EACAc,UAAUA,CAACP,KAAa;IACtB,IAAI,CAACP,KAAK,CAACe,MAAM,CAACR,KAAK,EAAE,CAAC,CAAC;IAC3B,IAAI,CAACN,YAAY,CAACY,IAAI,CAAC,IAAI,CAACb,KAAK,CAAC,CAAC,CAAC;EACtC;EAEA;EACAgB,UAAUA,CAACC,WAAiB;IAC1B,MAAMV,KAAK,GAAG,IAAI,CAACP,KAAK,CAACQ,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKO,WAAW,CAACP,EAAE,CAAC;IAChE,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACP,KAAK,CAACO,KAAK,CAAC,GAAGU,WAAW;MAC/B,IAAI,CAAChB,YAAY,CAACY,IAAI,CAAC,IAAI,CAACb,KAAK,CAAC,CAAC,CAAC;;EAExC;;SAzCWF,wBAAwB;;mBAAxBA,MAAwB;AAAA;;SAAxBA,MAAwB;EAAAoB,OAAA,EAAxBpB,MAAwB,CAAAqB,IAAA;EAAAC,UAAA,EAFvB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}